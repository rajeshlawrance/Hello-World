# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

name: Maven Package

on:
   push:
      branches: [ "master" ]
   pull_request:
      branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
    
      - uses: actions/checkout@v2
      
      - uses: actions/cache@v1
        with:
            path: ~/.m2/repository
            key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
            restore-keys: |
                ${{ runner.os }}-maven-
      - name: Set up JDK 8
        uses: actions/setup-java@v2
        with:
          java-version: '8'
          distribution: 'adopt'
          overwrite-settings: false
          
      - name: maven-settings-xml-action
        uses: whelk-io/maven-settings-xml-action@v20
    
        with:
            repositories: >
              [
            servers: >
              [
               
                {
                  "id": "central",
                  "username": "rajeshlawrance@gmail.com",
                  "password": "cmVmdGtuOjAxOjE3MDg1OTY5NDc6S2R3Mm16TlM5cnJPUHdYYXc2YThlQTNEMUFR"
                }
              ]             
      - name: Build with Maven
        run: mvn -B package --file pom.xml -DskipTests 
        
      - name: Upload artifact
        uses: actions/upload-artifact@master
        with:
            name: artifacts
            path: target/*.jar
            
      - name: Set RELEASE_TAG
        run: echo "RELEASE_TAG=$(date +'%Y%m%d').${{ github.run_number }}" >> $GITHUB_ENV

      - name: Create release_tag.txt file
        run: echo "${{ env.RELEASE_TAG }}" > release_tag.txt

      - name: Upload release_tag.txt to artifacts
        uses: actions/upload-artifact@v2
        with:
          name: release_tag
          path: release_tag.txt
          retention-days: 31

      - name: Tag release candidate with RELEASE_TAG
        uses: actions/github-script@v5
        with:
          script: |
            github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: 'refs/tags/${{env.RELEASE_TAG}}',
              sha: context.sha
            })
        continue-on-error: true           
      - name: Deploy to PROD
        run: mvn deploy -DskipTests -DmuleDeploy -Dmule.artifact=$(ls *.jar | head -l) -Danypoint.connectedAppClientId=$GITHUB_CONNECTED_APP_CLIENT_ID  -Danypoint.connectedAppClientSecret=$GITHUB_CONNECTED_APP_CLIENT_SECRET -Danypoint.platform.client_id=$WERNER_ANYPOINT_CLIENT_ID   -Danypoint.platform.client_secret=$WERNER_ANYPOINT_CLIENT_SECRET   -Danypoint.environment=$MULE_ENV -Dmule.env=$MULE_ENV -Dmule.key=$MULE_KEY  -Dworker.count=$WORKER_COUNT -Dworker.type=$WORKER_TYPE -Dworker.region=$WORKER_REGION -Djks.password=$JKS_PASSWORD -Djks.key.password=$JKS_PASSWORD -Dhost=$HOST -DdeploymentTimeout=1200000

